<?php

namespace Artack\Color;

use PHPUnit\Framework\TestCase;

class ConverterTest extends TestCase
{

    /**
     * @dataProvider colorProvider
     */
    public function testRGBtoHSV($red, $green, $blue, $hue, $saturation, $value)
    {
        $hsv = Converter::RGBtoHSV(new RGB($red, $green, $blue));

        $this->assertEquals($hue, $hsv->getHue());
        $this->assertEquals($saturation, round($hsv->getSaturation(), 2));
        $this->assertEquals($value, round($hsv->getValue(), 2));
    }

    /**
     * @dataProvider colorProvider
     */
    public function testHSVtoRGB($red, $green, $blue, $hue, $saturation, $value)
    {
        $rgb = Converter::HSVtoRGB(new HSV($hue, $saturation, $value));

        $this->assertEquals($red, $rgb->getRed());
        $this->assertEquals($green, $rgb->getGreen());
        $this->assertEquals($blue, $rgb->getBlue());
    }

    public function colorProvider()
    {
        return [
            [  0,   0,   0,   0,   0,      0],
            [  0,   0,  85, 240, 100,     33.33],
            [  0,   0, 170, 240, 100,     66.67],
            [  0,   0, 255, 240, 100,    100],
            [  0,  85,   0, 120, 100,     33.33],
            [  0,  85,  85, 180, 100,     33.33],
            [  0,  85, 170, 210, 100,     66.67],
            [  0,  85, 255, 220, 100,    100],
            [  0, 170,   0, 120, 100,     66.67],
            [  0, 170,  85, 150, 100,     66.67],
            [  0, 170, 170, 180, 100,     66.67],
            [  0, 170, 255, 200, 100,    100],
            [  0, 255,   0, 120, 100,    100],
            [  0, 255,  85, 140, 100,    100],
            [  0, 255, 170, 160, 100,    100],
            [  0, 255, 255, 180, 100,    100],
            [ 85,   0,   0,   0, 100,     33.33],
            [ 85,   0,  85, 300, 100,     33.33],
            [ 85,   0, 170, 270, 100,     66.67],
            [ 85,   0, 255, 260, 100,    100],
            [ 85,  85,   0,  60, 100,     33.33],
            [ 85,  85,  85,   0,   0,     33.33],
            [ 85,  85, 170, 240,  50,     66.67],
            [ 85,  85, 255, 240,  66.67, 100],
            [ 85, 170,   0,  90, 100,     66.67],
            [ 85, 170,  85, 120,  50,     66.67],
            [ 85, 170, 170, 180,  50,     66.67],
            [ 85, 170, 255, 210,  66.67, 100],
            [ 85, 255,   0, 100, 100,    100],
            [ 85, 255,  85, 120,  66.67, 100],
            [ 85, 255, 170, 150,  66.67, 100],
            [ 85, 255, 255, 180,  66.67, 100],
            [170,   0,   0,   0, 100,     66.67],
            [170,   0,  85, 330, 100,     66.67],
            [170,   0, 170, 300, 100,     66.67],
            [170,   0, 255, 280, 100,    100],
            [170,  85,   0,  30, 100,     66.67],
            [170,  85,  85,   0,  50,     66.67],
            [170,  85, 170, 300,  50,     66.67],
            [170,  85, 255, 270,  66.67, 100],
            [170, 170,   0,  60, 100,     66.67],
            [170, 170,  85,  60,  50,     66.67],
            [170, 170, 170,   0,   0,     66.67],
            [170, 170, 255, 240,  33.33, 100],
            [170, 255,   0,  80, 100,    100],
            [170, 255,  85,  90,  66.67, 100],
            [170, 255, 170, 120,  33.33, 100],
            [170, 255, 255, 180,  33.33, 100],
            [255,   0,   0,   0, 100,    100],
            [255,   0,  85, 340, 100,    100],
            [255,   0, 170, 320, 100,    100],
            [255,   0, 255, 300, 100,    100],
            [255,  85,   0,  20, 100,    100],
            [255,  85,  85,   0,  66.67, 100],
            [255,  85, 170, 330,  66.67, 100],
            [255,  85, 255, 300,  66.67, 100],
            [255, 170,   0,  40, 100,    100],
            [255, 170,  85,  30,  66.67, 100],
            [255, 170, 170,   0,  33.33, 100],
            [255, 170, 255, 300,  33.33, 100],
            [255, 255,   0,  60, 100,    100],
            [255, 255,  85,  60,  66.67, 100],
            [255, 255, 170,  60,  33.33, 100],
            [255, 255, 255,   0,   0,    100],
        ];
    }

}